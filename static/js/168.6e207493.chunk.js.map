{"version":3,"file":"static/js/168.6e207493.chunk.js","mappings":"+PACA,GAAgB,UAAY,2BAA2B,KAAO,sBAAsB,KAAO,sBAAsB,QAAU,0B,SC8C3H,EAxCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCH,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,6FACCD,GAAY,GADb,mBAG0BE,EAAAA,EAAAA,IAAaL,GAHvC,gBAGWM,EAHX,EAGWA,KACRP,EAAWO,EAAKC,SAJnB,gDAOGC,QAAQC,IAAR,MAPH,yBASGN,GAAY,GATf,2EAAD,EAYD,GAAE,CAACH,KAGF,iBAAKU,UAAWC,EAAAA,UAAhB,UACGT,IAAY,SAACU,EAAA,EAAD,MACVd,GAA8B,IAAnBA,EAAQe,UACpB,cAAGH,UAAWC,EAAAA,IAAd,SAAqB,4CAEtBb,IACC,eAAIY,UAAWC,EAAAA,KAAf,SACGb,EAAQgB,KAAI,SAAAC,GAAM,OACjB,gBAAoBL,UAAWC,EAAAA,KAA/B,WACE,gBAAID,UAAWC,EAAAA,OAAf,UAAyB,WAASI,EAAOC,WACzC,cAAGN,UAAWC,EAAAA,QAAd,SAA0BI,EAAOE,YAF1BF,EAAOG,GADC,QAU5B,C,mKC3CKC,EAAU,mCACVC,EAAW,+BAEJC,EAAkB,WAE7B,OADaC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,qCAAkDD,GAEhE,EAEYI,EAAmB,SAAAC,GAI9B,OAHaF,EAAAA,EAAAA,IAAA,UACRF,EADQ,iCACyBD,EADzB,iCACyDK,GAGvE,EAEYC,EAAoB,SAAAP,GAE/B,OADaI,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BF,EAA/B,oBAA6CC,GAE3D,EAEYO,EAAY,SAAAR,GAEvB,OADaI,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BF,EAA/B,4BAAqDC,GAEnE,EAEYd,EAAe,SAAAa,GAE1B,OADaI,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BF,EAA/B,4BAAqDC,GAEnE,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","services/moviesAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Reviews_container__2j80+\",\"list\":\"Reviews_list__okdpy\",\"item\":\"Reviews_item__DJKij\",\"content\":\"Reviews_content__13k0w\"};","import { Loader } from 'components/Loader/Loader';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'services/moviesAPI';\nimport s from './Reviews.module.css';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n  const [isLoader, setIsLoader] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      setIsLoader(true);\n      try {\n        const { data } = await fetchReviews(movieId);\n        setReviews(data.results);\n        \n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoader(false);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <div className={s.container}>\n      {isLoader && <Loader />}\n      {(!reviews || reviews.length === 0) && (\n        <p className={s.err}>There aren't any reviews for this movie</p>\n      )}\n      {reviews && (\n        <ul className={s.list}>\n          {reviews.map(review => (\n            <li key={review.id} className={s.item}>\n              <h2 className={s.author}>Author: {review.author}</h2>\n              <p className={s.content}>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;","import axios from 'axios';\n\nconst API_KEY = '077542ca1acb186c550ac02d63fc7590';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendMovie = () => {\n  const data = axios.get(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchSearchMovie = query => {\n  const data = axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n  );\n  return data;\n};\n\nexport const fetchMovieDetails = id => {\n  const data = axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchCast = id => {\n  const data = axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchReviews = id => {\n  const data = axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n  return data;\n};\n"],"names":["useState","reviews","setReviews","movieId","useParams","isLoader","setIsLoader","useEffect","fetchReviews","data","results","console","log","className","s","Loader","length","map","review","author","content","id","API_KEY","BASE_URL","fetchTrendMovie","axios","fetchSearchMovie","query","fetchMovieDetails","fetchCast"],"sourceRoot":""}